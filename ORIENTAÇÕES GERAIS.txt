crie um site de agricultura com um titulo uma imagem e 3 menus com 3 frases cada um em html e css e js

O ChatGPT disse:
Claro! Vou criar para você um site simples de agricultura com:

Um título

Uma imagem

3 menus (cada menu com 3 frases)

Usando HTML, CSS e JavaScript básicos

Aqui está o código completo:

html
Copiar
<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Site de Agricultura</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #e8f5e9;
      margin: 0;
      padding: 0;
      color: #2e7d32;
    }
    header {
      background: #4caf50;
      color: white;
      text-align: center;
      padding: 1.5rem 0;
      font-size: 2rem;
      font-weight: bold;
      box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }
    main {
      max-width: 900px;
      margin: 2rem auto;
      padding: 0 1rem;
    }
    img {
      display: block;
      max-width: 100%;
      height: auto;
      margin: 0 auto 2rem auto;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    nav {
      display: flex;
      justify-content: space-around;
      gap: 1rem;
      margin-bottom: 2rem;
    }
    .menu {
      background: white;
      border-radius: 10px;
      padding: 1rem 1.5rem;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      cursor: pointer;
      flex: 1;
      transition: background 0.3s;
      user-select: none;
    }
    .menu:hover {
      background: #a5d6a7;
    }
    .menu h3 {
      margin-top: 0;
      margin-bottom: 0.8rem;
      text-align: center;
    }
    .phrases {
      display: none;
      list-style: none;
      padding-left: 1rem;
      color: #33691e;
    }
    .phrases li {
      margin-bottom: 0.5rem;
    }
  </style>
</head>
<body>

<header>Site de Agricultura Sustentável</header>

<main>
  <img src="https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=800&q=80" alt="Campo agrícola" />

  <nav>
    <div class="menu" id="menu1">
      <h3>Plantio</h3>
      <ul class="phrases">
        <li>Escolha sementes de qualidade.</li>
        <li>Prepare o solo corretamente.</li>
        <li>Respeite o ciclo da planta.</li>
      </ul>
    </div>
    <div class="menu" id="menu2">
      <h3>Colheita</h3>
      <ul class="phrases">
        <li>Colha no momento certo.</li>
        <li>Use ferramentas adequadas.</li>
        <li>Armazene corretamente.</li>
      </ul>
    </div>
    <div class="menu" id="menu3">
      <h3>Cuidados</h3>
      <ul class="phrases">
        <li>Regue regularmente as plantas.</li>
        <li>Controle pragas naturalmente.</li>
        <li>Use adubos orgânicos.</li>
      </ul>
    </div>
  </nav>
</main>

<script>
  // Função para alternar exibição das frases ao clicar no menu
  const menus = document.querySelectorAll('.menu');
  menus.forEach(menu => {
    menu.addEventListener('click', () => {
      const phrases = menu.querySelector('.phrases');
      const isVisible = phrases.style.display === 'block';
      // Fecha todos
      document.querySelectorAll('.phrases').forEach(p => p.style.display = 'none');
      // Abre só o clicado (se estava fechado)
      if (!isVisible) {
        phrases.style.display = 'block';
      }
    });
  });
</script>

</body>
</html>
Como funciona:
O título está no <header>.

A imagem é um campo agrícola (usando URL do Unsplash).

Os 3 menus são blocos clicáveis que mostram/escondem as 3 frases abaixo.

O JavaScript faz a interação para abrir e fechar as frases ao clicar.

Quer que eu faça alguma modificação ou adicione algo?


Você disse:
por favor, detalhe cada linha do código - ou bloco de codigo

O ChatGPT disse:
Claro! Vou detalhar o código, explicando linha a linha ou por blocos para facilitar o entendimento.

html
Copiar
<!DOCTYPE html>
<html lang="pt-BR">
<!DOCTYPE html>: Define que o documento é HTML5.

<html lang="pt-BR">: Elemento raiz do HTML, com atributo lang indicando que o idioma é português do Brasil.

html
Copiar
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Site de Agricultura</title>
<head>: Contém metadados do documento.

<meta charset="UTF-8" />: Define a codificação de caracteres para UTF-8, permitindo caracteres especiais.

<meta name="viewport" content="width=device-width, initial-scale=1" />: Ajusta a escala da página para dispositivos móveis, garantindo responsividade.

<title>: Define o título da aba do navegador.

html
Copiar
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #e8f5e9;
      margin: 0;
      padding: 0;
      color: #2e7d32;
    }
style: Início do CSS embutido.

body: Define estilos para o corpo da página:

Fonte Arial, ou sans-serif se Arial não estiver disponível.

Fundo com cor verde claro (#e8f5e9).

Sem margens e sem preenchimento padrão.

Cor do texto verde escuro (#2e7d32).

css
Copiar
    header {
      background: #4caf50;
      color: white;
      text-align: center;
      padding: 1.5rem 0;
      font-size: 2rem;
      font-weight: bold;
      box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }
header: Estiliza o cabeçalho:

Fundo verde (#4caf50).

Texto branco.

Texto centralizado.

Espaçamento vertical (topo e base) de 1.5 rem (unidade relativa à fonte).

Tamanho da fonte grande (2 rem).

Texto em negrito.

Sombra sutil para destacar o cabeçalho.

css
Copiar
    main {
      max-width: 900px;
      margin: 2rem auto;
      padding: 0 1rem;
    }
main: Área principal do conteúdo.

Largura máxima 900px (limita largura em telas grandes).

Margem vertical de 2 rem e automática horizontalmente (centraliza horizontalmente).

Espaçamento interno horizontal de 1 rem.

css
Copiar
    img {
      display: block;
      max-width: 100%;
      height: auto;
      margin: 0 auto 2rem auto;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
img: Estiliza a imagem:

Exibe como bloco para controlar margem.

Largura máxima 100% do contêiner (para responsividade).

Altura automática para manter proporção.

Margem: 0 topo, automática esquerda e direita (centraliza horizontalmente), 2rem abaixo.

Bordas arredondadas com raio de 10px.

Sombra ao redor para destaque.

css
Copiar
    nav {
      display: flex;
      justify-content: space-around;
      gap: 1rem;
      margin-bottom: 2rem;
    }
nav: Navegação com os menus.

Usando Flexbox para alinhar os menus lado a lado.

Espaço distribuído igualmente entre os menus (space-around).

Espaço entre os itens (gap) de 1rem.

Margem inferior de 2rem para separar do resto da página.

css
Copiar
    .menu {
      background: white;
      border-radius: 10px;
      padding: 1rem 1.5rem;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      cursor: pointer;
      flex: 1;
      transition: background 0.3s;
      user-select: none;
    }
.menu: Cada bloco de menu.

Fundo branco.

Bordas arredondadas 10px.

Espaçamento interno de 1 rem vertical e 1.5 rem horizontal.

Sombra leve.

Cursor muda para "mãozinha" indicando que é clicável.

Flex: 1 — faz cada menu ocupar espaço igual dentro do container flex.

Transição suave para a cor do fundo (0.3 segundos).

Impede seleção de texto ao clicar ou arrastar.

css
Copiar
    .menu:hover {
      background: #a5d6a7;
    }
.menu:hover: Ao passar o mouse, o fundo muda para verde claro (#a5d6a7) para feedback visual.

css
Copiar
    .menu h3 {
      margin-top: 0;
      margin-bottom: 0.8rem;
      text-align: center;
    }
Título dentro do menu (h3):

Remove margem superior para ficar colado no topo.

Margem inferior de 0.8 rem para espaçar do conteúdo abaixo.

Centraliza texto.

css
Copiar
    .phrases {
      display: none;
      list-style: none;
      padding-left: 1rem;
      color: #33691e;
    }
.phrases: Lista de frases escondidas inicialmente.

display: none esconde o conteúdo.

Remove os marcadores padrão da lista.

Espaçamento interno à esquerda para indentação.

Cor verde escuro para texto.

css
Copiar
    .phrases li {
      margin-bottom: 0.5rem;
    }
  </style>
</head>
Cada item da lista:

Espaço inferior de 0.5 rem para separar frases.

Fim do bloco CSS.

html
Copiar
<body>

<header>Site de Agricultura Sustentável</header>
Corpo da página começa.

Cabeçalho com texto visível e estilizado.

html
Copiar
<main>
  <img src="https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=800&q=80" alt="Campo agrícola" />
Conteúdo principal.

Imagem de um campo agrícola (URL de imagem do Unsplash).

alt: texto alternativo para acessibilidade.

html
Copiar
  <nav>
    <div class="menu" id="menu1">
      <h3>Plantio</h3>
      <ul class="phrases">
        <li>Escolha sementes de qualidade.</li>
        <li>Prepare o solo corretamente.</li>
        <li>Respeite o ciclo da planta.</li>
      </ul>
    </div>
Navegação com os menus.

Cada .menu é um bloco clicável com título e lista de frases.

Primeiro menu "Plantio" com 3 frases.

html
Copiar
    <div class="menu" id="menu2">
      <h3>Colheita</h3>
      <ul class="phrases">
        <li>Colha no momento certo.</li>
        <li>Use ferramentas adequadas.</li>
        <li>Armazene corretamente.</li>
      </ul>
    </div>
Segundo menu "Colheita" com suas frases.

html
Copiar
    <div class="menu" id="menu3">
      <h3>Cuidados</h3>
      <ul class="phrases">
        <li>Regue regularmente as plantas.</li>
        <li>Controle pragas naturalmente.</li>
        <li>Use adubos orgânicos.</li>
      </ul>
    </div>
  </nav>
</main>
Terceiro menu "Cuidados" e encerramento do conteúdo.

html
Copiar
<script>
  // Função para alternar exibição das frases ao clicar no menu
  const menus = document.querySelectorAll('.menu');
  menus.forEach(menu => {
    menu.addEventListener('click', () => {
      const phrases = menu.querySelector('.phrases');
      const isVisible = phrases.style.display === 'block';
      // Fecha todos
      document.querySelectorAll('.phrases').forEach(p => p.style.display = 'none');
      // Abre só o clicado (se estava fechado)
      if (!isVisible) {
        phrases.style.display = 'block';
      }
    });
  });
</script>
JavaScript para interatividade:

Seleciona todos os elementos com classe .menu.

Para cada menu, adiciona um evento de clique.

Ao clicar:

Seleciona a lista .phrases dentro do menu clicado.

Verifica se já está visível (display: block).

Fecha todas as listas (esconde todas).

Se a lista clicada estava escondida, mostra ela (display: block).

Resultado: só um menu abre por vez, clicando novamente fecha.

html
Copiar
</body>
</html>
Final do corpo e do documento HTML.

Se quiser, posso te ajudar a entender melhor algum pedaço, ou até explicar mais sobre o JavaScript ou CSS! Quer?


Você disse:
otimo.

O ChatGPT disse:
Que bom que gostou! 😊

Se precisar de mais alguma coisa — como adicionar funcionalidades, mudar o design, deixar o site mais interativo — é só chamar. Estou aqui pra ajudar! 🌱🚜✨

Quer testar alguma coisa nova no site?


Você disse:
agora gostaria que de cada linha, alocasse as possibilidades de configuração eu poderia usar, por exemplo, onde tem  esse comando  (   nav {
      display: flex;  )     quais as opções além do flex.      Gera para todos os comandos

O ChatGPT disse:
Beleza! Vou detalhar para você, linha por linha, mostrando as possibilidades de configurações alternativas para cada propriedade CSS que usei no site. Assim você pode explorar outras opções para cada comando.

CSS: Propriedades e possíveis valores alternativos
1. body:
css
Copiar
body {
  font-family: Arial, sans-serif;
  background: #e8f5e9;
  margin: 0;
  padding: 0;
  color: #2e7d32;
}
font-family: define a fonte do texto.

Alternativas comuns: 'Times New Roman', serif, 'Courier New', monospace, 'Georgia', serif, 'Verdana', sans-serif.

Pode usar fontes customizadas via @font-face ou Google Fonts.

background:

Pode ser cor (ex: #e8f5e9), gradiente (linear-gradient), imagem (url(...)), ou combinações.

Exemplos:

background: linear-gradient(to right, #a8e063, #56ab2f);

background: url('imagem.jpg') no-repeat center center / cover;

margin e padding:

Valores podem ser:

0 (sem espaço), valores fixos (ex: 10px, 2rem), %, auto (margem automática para centralizar blocos).

Exemplo: margin: 10px 5% 20px 0; (topo, direita, baixo, esquerda).

color:

Cor do texto, pode ser em hex (#2e7d32), RGB (rgb(46,125,50)), RGBA (com transparência), HSL, nomes (green).

2. header:
css
Copiar
header {
  background: #4caf50;
  color: white;
  text-align: center;
  padding: 1.5rem 0;
  font-size: 2rem;
  font-weight: bold;
  box-shadow: 0 4px 6px rgba(0,0,0,0.1);
}
background:

Pode ser cor, imagem, gradiente, transparente.

Exemplo: background: rgba(76, 175, 80, 0.7); para um verde semitransparente.

color:

Cor do texto (ex: branco, preto, outra cor).

text-align:

Alinha o texto horizontalmente.

Opções: left (padrão), right, center, justify (justificado).

padding:

Espaçamento interno.

Pode usar unidades como px, rem, %.

Pode definir todos os lados: padding: 10px 15px 5px 20px; (topo, direita, baixo, esquerda).

font-size:

Tamanho da fonte.

Unidades comuns: px, em, rem, %.

Exemplo: font-size: 16px; ou font-size: 1.5em;.

font-weight:

Espessura da fonte.

Valores: normal, bold, bolder, lighter, ou numéricos (100 a 900).

box-shadow:

Sombra do elemento.

Sintaxe: offset-x offset-y blur-radius spread-radius color.

Exemplo: box-shadow: 2px 2px 5px rgba(0,0,0,0.3);

Pode usar múltiplas sombras separadas por vírgula.

3. main:
css
Copiar
main {
  max-width: 900px;
  margin: 2rem auto;
  padding: 0 1rem;
}
max-width:

Define largura máxima.

Pode usar valores fixos (px, em), %, vw (viewport width).

Exemplo: max-width: 80%;, max-width: 100vw;.

margin:

2rem auto significa margem vertical 2 rem e automática nas laterais para centralizar horizontalmente.

Pode usar valores específicos para cada lado: margin: top right bottom left;.

auto em margem lateral centraliza blocos com largura fixa.

padding:

Espaço interno.

0 1rem significa sem espaçamento em cima/baixo e 1 rem nas laterais.

Pode definir separadamente os 4 lados.

4. img:
css
Copiar
img {
  display: block;
  max-width: 100%;
  height: auto;
  margin: 0 auto 2rem auto;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}
display:

Pode ser inline (padrão para imagens), block, inline-block, flex, grid, none (esconde).

block permite centralizar com margin auto.

max-width:

Limita a largura máxima da imagem.

Pode ser %, px, em, vw.

height:

Define altura. auto mantém a proporção da imagem.

margin:

Define espaço externo.

0 auto 2rem auto = 0 em cima, automático nas laterais (centraliza), 2 rem abaixo.

border-radius:

Arredonda bordas.

Pode ser em px, %, ex: 50% cria círculo se a imagem for quadrada.

box-shadow:

Sombra da imagem. Já explicado acima.

5. nav:
css
Copiar
nav {
  display: flex;
  justify-content: space-around;
  gap: 1rem;
  margin-bottom: 2rem;
}
display:

Opções comuns:

block (padrão)

inline

inline-block

flex (usado para layout flexível)

grid (layout baseado em grade)

none (esconde)

flex permite alinhar itens filhos em linha ou coluna.

justify-content (quando display: flex):

Controla alinhamento horizontal dos itens.

Opções:

flex-start: itens colados no início (esquerda).

flex-end: no fim (direita).

center: centralizados.

space-between: espaço distribuído entre itens.

space-around: espaço distribuído ao redor dos itens.

space-evenly: espaço igual entre itens e bordas.

gap:

Espaço entre itens (novo em flexbox e grid).

Pode usar valores em px, rem, %.

Exemplo: gap: 10px;

margin-bottom:

Espaço externo abaixo do nav.

Pode ser qualquer unidade.

6. .menu:
css
Copiar
.menu {
  background: white;
  border-radius: 10px;
  padding: 1rem 1.5rem;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  cursor: pointer;
  flex: 1;
  transition: background 0.3s;
  user-select: none;
}
background:

Pode ser cor sólida, imagem, gradiente, transparente.

Exemplo: background: #f0f0f0;, background: linear-gradient(to bottom, #fff, #ccc);

border-radius:

Arredonda bordas, já explicado.

padding:

Espaço interno.

Pode usar valores diferentes para cada lado.

box-shadow:

Sombra leve.

cursor:

Define o cursor do mouse quando passa sobre o elemento.

Opções comuns:

default (seta padrão)

pointer (mãozinha)

text (cursor de texto)

wait (ampulheta)

not-allowed (proibido)

crosshair etc.

flex:

Quando dentro de um container flex, define o crescimento, encolhimento e base do item.

flex: 1 é shorthand para flex-grow: 1; flex-shrink: 1; flex-basis: 0;

Alternativas:

flex: 0 1 auto; (padrão)

flex: 2; (cresce mais que os outros)

flex-grow: 0; flex-shrink: 0; flex-basis: auto;

transition:

Define animação suave para mudanças CSS.

Sintaxe: property duration timing-function delay

Exemplo: transition: all 0.5s ease-in-out;

user-select:

Controla se o usuário pode selecionar o texto.

Opções:

auto (padrão)

none (não pode selecionar)

text (só texto)

all (seleciona tudo de uma vez)

7. .menu:hover:
css
Copiar
.menu:hover {
  background: #a5d6a7;
}
Pseudo-classe :hover ativa quando mouse está sobre o elemento.

background pode ser qualquer cor ou efeito para dar feedback.

8. .menu h3:
css
Copiar
.menu h3 {
  margin-top: 0;
  margin-bottom: 0.8rem;
  text-align: center;
}
margin-top e margin-bottom:

Pode ser qualquer valor de espaçamento, positivo ou negativo.

text-align:

Pode ser left, right, center, justify.

9. .phrases:
css
Copiar
.phrases {
  display: none;
  list-style: none;
  padding-left: 1rem;
  color: #33691e;
}
display:

Valores possíveis:

none: esconde o elemento.

block: exibe em bloco.

inline: exibe em linha.

inline-block: em linha com possibilidade de largura e altura.

flex, grid: layouts avançados.

list-style:

Define marcador da lista.

Valores:

none (sem marcador)

disc (círculo cheio)

circle (círculo vazado)

square (quadrado)

decimal (numeração)

Também pode usar imagens com list-style-image.

padding-left:

Espaçamento interno à esquerda para dar indentação.

color:

Cor do texto, pode usar qualquer cor CSS.

10. .phrases li:
css
Copiar
.phrases li {
  margin-bottom: 0.5rem;
}
margin-bottom:

Espaçamento entre os itens da lista.

Se quiser, posso montar um arquivo com exemplos dessas opções para você testar na prática! Quer?


Você disse:
pode ser

O ChatGPT disse:
Perfeito! Vou criar um arquivo CSS com vários exemplos alternativos para cada propriedade usada, para você testar e entender o que cada uma faz.

Segue o código comentado — basta salvar como exemplos.css e testar no seu navegador junto com um HTML simples (posso ajudar nisso também).

css
Copiar
/* Exemplos de alternativas para as propriedades usadas no site de agricultura */

/* 1. Body */
body {
  /* font-family: */
  font-family: 'Georgia', serif; /* exemplo alternativo */
  /* background: */
  background: linear-gradient(to right, #a8e063, #56ab2f);
  /* margin e padding: */
  margin: 10px 5% 20px 0; /* topo, direita, baixo, esquerda */
  padding: 1rem 2rem;
  /* color */
  color: rgb(34, 139, 34); /* verde escuro */
}

/* 2. Header */
header {
  /* background */
  background: rgba(76, 175, 80, 0.7);
  /* color */
  color: black;
  /* text-align */
  text-align: left;
  /* padding */
  padding: 2rem 3rem;
  /* font-size */
  font-size: 24px;
  /* font-weight */
  font-weight: 900;
  /* box-shadow */
  box-shadow: 2px 2px 5px rgba(0,0,0,0.3);
}

/* 3. Main */
main {
  /* max-width */
  max-width: 80%;
  /* margin */
  margin: 3rem auto 1rem auto;
  /* padding */
  padding: 2rem 3rem 2rem 1rem;
}

/* 4. Imagem */
img {
  /* display */
  display: inline-block;
  /* max-width */
  max-width: 90%;
  /* height */
  height: 250px;
  /* margin */
  margin: 20px auto 1rem auto;
  /* border-radius */
  border-radius: 50%; /* imagem circular */
  /* box-shadow */
  box-shadow: 0 6px 12px rgba(0,0,0,0.4);
}

/* 5. Nav */
nav {
  /* display */
  display: grid;
  /* grid-template-columns */
  grid-template-columns: repeat(3, 1fr);
  /* justify-content */
  justify-content: center; /* para grid pode usar justify-items */
  /* gap */
  gap: 2rem;
  /* margin-bottom */
  margin-bottom: 3rem;
}

/* 6. Menu */
.menu {
  /* background */
  background: #f0f0f0;
  /* border-radius */
  border-radius: 20px;
  /* padding */
  padding: 2rem 2.5rem;
  /* box-shadow */
  box-shadow: inset 0 0 10px #b2fab4;
  /* cursor */
  cursor: default;
  /* flex (não usado em grid, mas vamos mostrar) */
  /* flex: 2; */
  /* transition */
  transition: all 0.5s ease-in-out;
  /* user-select */
  user-select: text;
}

/* 7. Menu:hover */
.menu:hover {
  background: #c8e6c9;
  box-shadow: 0 8px 15px rgba(0, 100, 0, 0.5);
  cursor: pointer;
}

/* 8. Menu h3 */
.menu h3 {
  margin-top: 1rem;
  margin-bottom: 1.5rem;
  text-align: right;
}

/* 9. Phrases */
.phrases {
  /* display */
  display: block;
  /* list-style */
  list-style: square;
  /* padding-left */
  padding-left: 2rem;
  /* color */
  color: hsl(120, 60%, 30%);
}

/* 10. Phrases li */
.phrases li {
  margin-bottom: 1rem;
}
Quer um HTML básico pra você colocar esse CSS e testar direto? Ou quer que eu faça um “modo interativo” para você alternar os estilos e ver o que acontece?

Me fala aí!


Você disse:
agora preciso do código com o css em arquivo separado

O ChatGPT disse:
Claro! Vou te entregar o código completo em dois arquivos:

index.html — o HTML do site

styles.css — o CSS separado, que o HTML vai carregar

1. index.html
html
Copiar
<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Site de Agricultura</title>
  <link rel="stylesheet" href="styles.css" />
</head>
<body>
  <header>Agricultura Sustentável</header>

  <main>
    <img src="https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=800&q=80" alt="Imagem de agricultura" />

    <nav>
      <div class="menu">
        <h3>Plantio</h3>
        <ul class="phrases">
          <li>Escolha sementes de qualidade.</li>
          <li>Prepare o solo corretamente.</li>
          <li>Use técnicas de plantio sustentáveis.</li>
        </ul>
      </div>

      <div class="menu">
        <h3>Colheita</h3>
        <ul class="phrases">
          <li>Colha no momento ideal.</li>
          <li>Evite danificar as plantas.</li>
          <li>Utilize equipamentos adequados.</li>
        </ul>
      </div>

      <div class="menu">
        <h3>Cuidados</h3>
        <ul class="phrases">
          <li>Controle pragas naturalmente.</li>
          <li>Realize irrigação eficiente.</li>
          <li>Faça manutenção do solo.</li>
        </ul>
      </div>
    </nav>
  </main>

  <script>
    const menus = document.querySelectorAll('.menu');

    menus.forEach(menu => {
      menu.addEventListener('click', () => {
        const phrases = menu.querySelector('.phrases');
        const isVisible = phrases.style.display === 'block';
        phrases.style.display = isVisible ? 'none' : 'block';
      });
    });
  </script>
</body>
</html>
2. styles.css
css
Copiar
/* Estilo geral */
body {
  font-family: Arial, sans-serif;
  background: #e8f5e9;
  margin: 0;
  padding: 0;
  color: #2e7d32;
}

/* Cabeçalho */
header {
  background: #4caf50;
  color: white;
  text-align: center;
  padding: 1.5rem 0;
  font-size: 2rem;
  font-weight: bold;
  box-shadow: 0 4px 6px rgba(0,0,0,0.1);
}

/* Conteúdo principal */
main {
  max-width: 900px;
  margin: 2rem auto;
  padding: 0 1rem;
}

/* Imagem */
img {
  display: block;
  max-width: 100%;
  height: auto;
  margin: 0 auto 2rem auto;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}

/* Navegação com menus */
nav {
  display: flex;
  justify-content: space-around;
  gap: 1rem;
  margin-bottom: 2rem;
}

/* Cada menu */
.menu {
  background: white;
  border-radius: 10px;
  padding: 1rem 1.5rem;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  cursor: pointer;
  flex: 1;
  transition: background 0.3s;
  user-select: none;
}

/* Efeito hover no menu */
.menu:hover {
  background: #a5d6a7;
}

/* Título dentro do menu */
.menu h3 {
  margin-top: 0;
  margin-bottom: 0.8rem;
  text-align: center;
}

/* Lista de frases inicialmente escondida */
.phrases {
  display: none;
  list-style: none;
  padding-left: 1rem;
  color: #33691e;
}

/* Espaçamento entre frases */
.phrases li {
  margin-bottom: 0.5rem;
}
Como usar
Salve o código do HTML em um arquivo chamado index.html.

Salve o código CSS em um arquivo chamado styles.css na mesma pasta do HTML.

Abra o index.html no navegador.

Quando clicar em qualquer menu, as frases aparecem e desaparecem.

